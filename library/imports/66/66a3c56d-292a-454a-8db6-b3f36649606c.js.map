{"version":3,"sources":["../../../../../assets/scripts/map/assets/scripts/map/render_chunk.js"],"names":["util","require","RenderQuartree","RenderChunk","cc","Class","extends","Node","properties","start","ctor","init","map","load","data","console","log","chunkX","x","chunkY","y","width","pixelRect","height","name","Rect","quartree","parent","initQuartree","setRigidbody","dump","type","DATATYPE","CHUNK","center","childBroken","module","exports"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,OAAOC,QAAQ,cAAR,CAAb;AACA,IAAMC,iBAAiBD,QAAQ,mBAAR,CAAvB;;AAEA,IAAIE,cAAcC,GAAGC,KAAH,CAAS;AACvBC,aAASF,GAAGG,IADW;;AAGvBC,gBAAY,EAHW;;AAOvB;;AAEA;;AAEAC,SAXuB,mBAWf,CAEP,CAbsB;AAevBC,QAfuB,kBAehB,CACN,CAhBsB;AAkBvBC,QAlBuB,gBAkBlBC,GAlBkB,EAkBb;AACN,aAAKA,GAAL,GAAWA,GAAX;AACH,KApBsB;AAsBvBC,QAtBuB,gBAsBlBC,IAtBkB,EAsBZ;AACPC,gBAAQC,GAAR,CAAY,cAAZ,EAA4BF,IAA5B;;AAEA,aAAKG,MAAL,GAAcH,KAAKI,CAAnB;AACA,aAAKC,MAAL,GAAcL,KAAKM,CAAnB;AACA,aAAKC,KAAL,GAAaP,KAAKQ,SAAL,CAAe,CAAf,CAAb;AACA,aAAKC,MAAL,GAAcT,KAAKQ,SAAL,CAAe,CAAf,CAAd;AACAR,aAAKU,IAAL,GAAY,KAAKA,IAAjB;;AAEA;AACA,aAAKF,SAAL,GAAiB,IAAIlB,GAAGqB,IAAP,CACbX,KAAKQ,SAAL,CAAe,CAAf,IAAoBR,KAAKQ,SAAL,CAAe,CAAf,IAAoB,CAD3B,EAEbR,KAAKQ,SAAL,CAAe,CAAf,IAAoBR,KAAKQ,SAAL,CAAe,CAAf,IAAoB,CAF3B,EAGbR,KAAKQ,SAAL,CAAe,CAAf,CAHa,EAIbR,KAAKQ,SAAL,CAAe,CAAf,CAJa,CAAjB;;AAOA,aAAKJ,CAAL,GAASJ,KAAKQ,SAAL,CAAe,CAAf,CAAT;AACA,aAAKF,CAAL,GAASN,KAAKQ,SAAL,CAAe,CAAf,CAAT;;AAEA;AACA,YAAI,CAAC,KAAKI,QAAV,EAAoB;AAChB,iBAAKA,QAAL,GAAgB,IAAIxB,cAAJ,EAAhB;AACA,iBAAKwB,QAAL,CAAcC,MAAd,GAAuB,IAAvB;AACA,iBAAKD,QAAL,CAAcE,YAAd,CAA2Bd,KAAKY,QAAhC,EAA0C,KAAKd,GAA/C;AACH,SAJD,MAKI;AACA,iBAAKc,QAAL,CAAcb,IAAd,CAAmBC,KAAKY,QAAxB;AACH;;AAED,aAAKA,QAAL,CAAcG,YAAd;AACH,KArDsB;AAuDvBC,QAvDuB,kBAuDhB;AACH,YAAIhB,OAAO,EAAX;;AAEAA,aAAKG,MAAL,GAAc,KAAKC,CAAnB;AACAJ,aAAKK,MAAL,GAAc,KAAKC,CAAnB;AACAN,aAAKU,IAAL,GAAY,KAAKA,IAAjB;;AAEAV,aAAKiB,IAAL,GAAY/B,KAAKgC,QAAL,CAAcC,KAA1B;AACAnB,aAAKY,QAAL,GAAgB,KAAKA,QAAL,CAAcI,IAAd,EAAhB;AACAhB,aAAKQ,SAAL,GAAiB,CACb,KAAKA,SAAL,CAAeY,MAAf,CAAsBhB,CADT,EAEb,KAAKI,SAAL,CAAeY,MAAf,CAAsBd,CAFT,EAGb,KAAKE,SAAL,CAAeD,KAHF,EAIb,KAAKC,SAAL,CAAeC,MAJF,CAAjB;AAQH,KAxEsB;AA0EvBY,eA1EuB,yBA0ET;AACV;AACA/B,WAAGY,GAAH,CAAO,yCAAP;AACH;;AAED;;AA/EuB,CAAT,CAAlB;;AAkFAoB,OAAOC,OAAP,GAAiBlC,WAAjB","file":"render_chunk.js","sourceRoot":"../../../../../assets/scripts/map","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nconst util = require(\"../base/util\");\nconst RenderQuartree = require(\"./render_quartree\");\n\nvar RenderChunk = cc.Class({\n    extends: cc.Node,\n\n    properties: {\n\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    start() {\n\n    },\n\n    ctor() {\n    },\n\n    init(map) {\n        this.map = map;\n    },\n\n    load(data) {\n        console.log(\"load chunk, \", data);\n\n        this.chunkX = data.x;\n        this.chunkY = data.y;\n        this.width = data.pixelRect[2];\n        this.height = data.pixelRect[3];\n        data.name = this.name;\n\n        /* 設置位置，為 cc.Rect 對象 */\n        this.pixelRect = new cc.Rect(\n            data.pixelRect[0] - data.pixelRect[2] / 2,\n            data.pixelRect[1] - data.pixelRect[3] / 2,\n            data.pixelRect[2],\n            data.pixelRect[3]\n        );\n\n        this.x = data.pixelRect[0];\n        this.y = data.pixelRect[1];\n\n        /* 沒有四叉樹則創建 */\n        if (!this.quartree) {\n            this.quartree = new RenderQuartree();\n            this.quartree.parent = this;\n            this.quartree.initQuartree(data.quartree, this.map);\n        }\n        else{\n            this.quartree.load(data.quartree);\n        }\n\n        this.quartree.setRigidbody();\n    },\n\n    dump() {\n        let data = {};\n\n        data.chunkX = this.x;\n        data.chunkY = this.y;\n        data.name = this.name;\n\n        data.type = util.DATATYPE.CHUNK;\n        data.quartree = this.quartree.dump();\n        data.pixelRect = [\n            this.pixelRect.center.x,\n            this.pixelRect.center.y,\n            this.pixelRect.width,\n            this.pixelRect.height\n        ];\n\n\n    },\n\n    childBroken() {\n        /* 不應該會通知到 chunk 節點 */\n        cc.log(\"Chunk be notice Child Broken!!!! ERROR!\");\n    }\n\n    // update (dt) {},\n});\n\nmodule.exports = RenderChunk;\n"]}