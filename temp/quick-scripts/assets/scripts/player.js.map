{"version":3,"sources":["player.js"],"names":["util","require","cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","onKeyDown","event","keyCode","macro","KEY","a","accLeft","d","accRight","w","up","accUp","s","accDown","onKeyUp","onLoad","jumping","collisionX","collisionY","touchingNumber","xSpeed","ySpeed","log","rigidbody","node","getComponent","RigidBody","linearDamping","systemEvent","on","SystemEvent","EventType","KEY_DOWN","KEY_UP","console","label","getChildByName","start","update","dt","lastLinearVelocity","linearVelocity","x","y","director","getPhysicsManager","gravity","string","lastGamePosition","gamePosition","pixel2AbsoluteBlockId_W","pixel2AbsoluteBlockId_H","lastChunk","currChunk","pixel2ChunkId_W","Math","abs","reflushMap","onDestroy","off","onBeginContact","contact","selfCollider","otherCollider","onEndContact","onPreSolve","onPostSolve"],"mappings":"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","file":"player.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nconst util = require(\"./base/util\");\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // 主角跳跃高度\n        jumpHeight: 0,\n        // 主角跳跃持续时间\n        jumpDuration: 0,\n        // 最大移动速度\n        maxMoveSpeed: 0,\n        // 加速度\n        accel: 0,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onKeyDown(event) {\n        // set a flag when key pressed\n        switch (event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = true;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = true;\n                break;\n            case cc.macro.KEY.w:\n            case cc.macro.KEY.up:\n\n                this.accUp = true;\n                break;\n            case cc.macro.KEY.s:\n                this.accDown = true;\n                break;\n        }\n    },\n\n    onKeyUp(event) {\n        // unset a flag when key released\n        switch (event.keyCode) {\n            case cc.macro.KEY.a:\n                this.accLeft = false;\n                break;\n            case cc.macro.KEY.d:\n                this.accRight = false;\n                break;\n            case cc.macro.KEY.w:\n                this.accUp = false;\n                break;\n            case cc.macro.KEY.s:\n                this.accDown = false;\n                break;\n        }\n    },\n\n    onLoad() {\n        // 初始化跳跃动作\n        //this.jumpAction = this.setJumpAction();\n        //this.node.runAction(this.jumpAction);\n\n        // 加速度方向开关\n        this.accLeft = false;\n        this.accRight = false;\n        this.accUp = false;\n        this.accDown = false;\n\n        this.jumping = false;\n\n        this.collisionX = 0;//x轴是否碰撞，0：没有碰撞，-1：左方有碰撞，1：右方有碰撞\n        this.collisionY = 0;\n\n        this.touchingNumber = 0;//同时碰撞物体的个数\n\n        // 主角当前水平方向速度\n        this.xSpeed = 0;\n        this.ySpeed = 0;\n\n        cc.log(\"player onLoad:\",this);\n\n        this.rigidbody = this.node.getComponent(cc.RigidBody);\n        this.rigidbody.linearDamping = 0.1;\n\n        // 初始化键盘输入监听\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n\n        this.node.on('direction', function (event) {\n            console.log('Hello!direction');\n        });\n\n        this.node.on('attack', function (event) {\n            console.log('Hello!attack');\n        });\n\n        this.label = this.node.getChildByName(\"dis\");\n\n    },\n\n    start() {\n\n    },\n\n    update(dt) {\n        // 根据当前加速度方向每帧更新速度\n        // 如果没有按下则减速\n\n        let lastLinearVelocity = this.rigidbody.linearVelocity;\n\n        if (this.accLeft) {\n            lastLinearVelocity.x -= this.accel * dt;\n        } else if (this.accRight) {\n            lastLinearVelocity.x += this.accel * dt;\n        }\n\n        // this.rigidbody.gravityScale = 0;\n        // if (this.accUp) {\n        //     lastLinearVelocity.y += this.accel * dt;\n        // } else if (this.accDown) {\n        //     lastLinearVelocity.y -= this.accel * dt;\n        // }\n\n        if (this.accUp && !this.jumping) {\n            lastLinearVelocity.y -= cc.director.getPhysicsManager().gravity.y;\n            this.jumping = true;\n        }\n\n        this.rigidbody.linearVelocity = lastLinearVelocity;\n\n\n        this.label ? this.label.string = `${this.node.x} \\n${this.node.y} \\n  ${this.rigidbody.linearVelocity.x}\\n ${this.rigidbody.linearVelocity.y}` : \"\"\n\n        // 计算方位，通知 map 进行刷新\n        this.node.lastGamePosition = this.node.gamePosition ? this.node.gamePosition : [0, 5];\n        this.node.gamePosition = [\n            util.pixel2AbsoluteBlockId_W(this.node.x / 16),\n            util.pixel2AbsoluteBlockId_H(this.node.y / 16)\n        ];\n\n        this.node.lastChunk = this.node.currChunk ? this.node.currChunk : [0, 0];\n        this.node.currChunk = [\n            util.pixel2ChunkId_W(this.node.x),\n            util.pixel2ChunkId_W(this.node.y)\n        ];\n\n        if (Math.abs(this.node.currChunk[0] - this.node.lastChunk[0]) > 0\n            || Math.abs(this.node.currChunk[1] - this.node.lastChunk[1]) > 0\n        ) {\n            this.node.reflushMap();\n        \n        }\n    },\n\n    onDestroy() {\n        // 取消键盘输入监听\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.off(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    },\n\n    // 只在两个碰撞体开始接触时被调用一次\n    onBeginContact(contact, selfCollider, otherCollider) {\n        this.jumping = false;\n    },\n\n    // 只在两个碰撞体结束接触时被调用一次\n    onEndContact(contact, selfCollider, otherCollider) {\n    },\n\n    // 每次将要处理碰撞体接触逻辑时被调用\n    onPreSolve(contact, selfCollider, otherCollider) {\n    },\n\n    // 每次处理完碰撞体接触逻辑时被调用\n    onPostSolve(contact, selfCollider, otherCollider) {\n    },\n});\n"]}