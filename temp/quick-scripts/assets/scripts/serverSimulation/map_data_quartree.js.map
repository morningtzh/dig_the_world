{"version":3,"sources":["map_data_quartree.js"],"names":["util","require","module","exports","n","pixelRect","data","parent","map","load","init","lu","MapDateQuarTree","ld","ru","rd","entity","ifEntity","h","getPerlin","BLOCK_WIDTH","BLOCK_HEIGHT","block","undefined","type","DATATYPE","QUARTREE","dump"],"mappings":"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","file":"map_data_quartree.js","sourceRoot":"../../../../../assets/scripts/serverSimulation","sourcesContent":["const util = require(\"../base/util\");\n\nmodule.exports = class MapDateQuarTree {\n\n    constructor(n, pixelRect, data, parent, map) {\n        this.parent = parent;\n        this.map = map;\n        if (data) {\n            this.load(data);\n        }\n        else {\n            this.init(n, pixelRect);\n        }\n    }\n\n    init(n, pixelRect) {\n        this.n = n;\n        this.pixelRect = pixelRect;\n\n        if (n > 0) {\n            this.lu = new MapDateQuarTree(\n                n - 1,\n                [\n                    pixelRect[0] - pixelRect[2] / 4,\n                    pixelRect[1] + pixelRect[3] / 4,\n                    pixelRect[2] / 2,\n                    pixelRect[3] / 2\n                ],\n                null,\n                this,\n                this.map\n            );\n            this.ld = new MapDateQuarTree(\n                n - 1,\n                [\n                    pixelRect[0] - pixelRect[2] / 4,\n                    pixelRect[1] - pixelRect[3] / 4,\n                    pixelRect[2] / 2,\n                    pixelRect[3] / 2\n                ],\n                null,\n                this,\n                this.map\n            );\n            this.ru = new MapDateQuarTree(\n                n - 1,\n                [\n                    pixelRect[0] + pixelRect[2] / 4,\n                    pixelRect[1] + pixelRect[3] / 4,\n                    pixelRect[2] / 2,\n                    pixelRect[3] / 2\n                ],\n                null,\n                this,\n                this.map\n            );\n            this.rd = new MapDateQuarTree(\n                n - 1,\n                [\n                    pixelRect[0] + pixelRect[2] / 4,\n                    pixelRect[1] - pixelRect[3] / 4,\n                    pixelRect[2] / 2,\n                    pixelRect[3] / 2\n                ],\n                null,\n                this,\n                this.map\n            );\n\n            this.entity = this.ifEntity();\n        } else {\n            let h = this.map.getPerlin(pixelRect[0] / util.BLOCK_WIDTH);\n            if ((pixelRect[1] / util.BLOCK_HEIGHT) <= h) {\n                this.block = true;\n                this.entity = true;\n            } else {\n                this.block = false;\n                this.entity = false;\n            }\n        }\n    }\n\n    load(data) {\n        this.n = data.n;\n        this.pixelRect = data.pixelRect;\n\n        if (data.n > 0) {\n            this.lu = new MapDateQuarTree(null, null, data.lu, this, this.map);\n            this.ld = new MapDateQuarTree(null, null, data.ld, this, this.map);\n            this.ru = new MapDateQuarTree(null, null, data.ru, this, this.map);\n            this.rd = new MapDateQuarTree(null, null, data.rd, this, this.map);\n        } else {\n            this.entity = data.entity;\n            this.block = data.block;\n        }\n    }\n\n    /* 等到用到的時候再去計算 */\n    ifEntity() {\n        /* 判斷 entity 屬性是否存在 */\n        if (null === this.entity || undefined === this.entity) {\n            //cc.log(`${\" \".repeat(this.n)}${this.n} ${this.pixelRect[0]}, ${this.pixelRect[1]} noentity`);\n            /* 如果不存在就去子組件中獲取 */\n            if (null !== this.block && undefined !== this.block) {\n                if (this.block) {\n                    //cc.log(`${\" \".repeat(this.n)}${this.n} ${this.pixelRect[0]}, ${this.pixelRect[1]} block on`);\n                    this.entity = true;\n                } else {\n                    //cc.log(`${\" \".repeat(this.n)}${this.n} ${this.pixelRect[0]}, ${this.pixelRect[1]} block off`);\n\n                    this.entity = false;\n                }\n            }\n            else {\n                this.entity = this.lu.ifEntity()\n                    && this.ld.ifEntity()\n                    && this.ru.ifEntity()\n                    && this.rd.ifEntity();\n                //cc.log(`${\" \".repeat(this.n)}${this.n} ${this.pixelRect[0]}, ${this.pixelRect[1]} get sub ${this.entity}`);\n            }\n        }\n\n        return this.entity;\n    }\n\n    dump() {\n        let data = {};\n\n        data.type = util.DATATYPE.QUARTREE;\n        data.pixelRect = this.pixelRect;\n        data.n = this.n;\n\n        if (this.n > 0) {\n            data.lu = this.lu.dump();\n            data.ld = this.ld.dump();\n            data.ru = this.ru.dump();\n            data.rd = this.rd.dump();\n        }\n        else {\n            data.block = this.block;\n        }\n\n        data.entity = this.entity;\n\n        return data;\n    }\n\n};"]}